# 工作流名称
name: Deploy Hugo site to Pages

# 触发条件：在 push 到 main 分支时触发
on:
  push:
    branches:
      - main
  # 允许你从 Actions 标签页手动运行此工作流
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以便部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许一个并发部署，新的部署会取消正在进行的部署
concurrency:
  group: "pages"
  cancel-in-progress: true

# 部署作业
jobs:
  # 构建作业
  build:
    runs-on: ubuntu-latest
    steps:
      # 步骤1：检出你的代码，包括 Git 子模块（我们的主题）
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive  # 这一行至关重要！用来拉取主题

      # 步骤2：安装 Hugo
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true # 必须是 extended 版本

      # 步骤3：配置 GitHub Pages
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      # 步骤4：构建网站
      # --minify 会压缩 HTML/CSS/JS 文件，减小体积
      - name: Build with Hugo
        run: hugo --minify --baseURL "https://gnailcn.github.io/"

      # 步骤5：上传构建产物 (public 文件夹)
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # 部署作业
  deploy:
    runs-on: ubuntu-latest
    # 需要 build 作业成功完成
    needs: build
    # 设置部署环境
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    # 部署步骤
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4